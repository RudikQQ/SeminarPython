# Task39
# Задача №39. Решение в группах
# Даны два массива чисел. Требуется вывести те элементы
# первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит
# число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество
# элементов во втором массиве. Затем элементы второго массива
# decision
# result_arr = []
# for i in arr_1:
#     if i not in arr_2:
#         if i not in result_arr:
#             result_arr.append(i)
# Task41
# Дан массив, состоящий из целых чисел. Напишите
# программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при
# этом, оба соседних элемента меньше данного. Сначала
# вводится число N — количество элементов в массиве
# Далее записаны N чисел — элементы массива. Массив
# состоит из целых чисел.
# decision
from CustomFuncs import *

# size1 = int(input('Введите количество элементов первого набора: '))
# arr_1 = input_array(size1)
# print(arr_1)

# count=0
# for i in range(1,size1-1):
#     if (arr_1[i] > arr_1[i-1]) & (arr_1[i] > arr_1[i+1]):
#         count+=1
# print(count)
# arr = [1,3,3,4,2,2]
# count = 0
# arr2=[]
# for i in range(len(arr)):
#     if arr[i] in arr2:
#         count+=1
#         arr2.remove(arr[i])
#     else:
#         arr2.append(arr[i])
# print(count)


# array = [1, 2, 2, 2, 3, 2, 3]
# result = pairs_count(array)
# print(result)
# Task43
# Задача №43. Решение в группах
# Дан список чисел. Посчитайте, сколько в нем пар
# элементов, равных друг другу. Считается, что любые
# два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. Вводится список
# чисел. Все числа списка находятся на разных
# строках.
# decision
# from CustomFuncs import *

# size1 = int(input('Введите количество элементов первого набора: '))
# arr_1 = input_array(size1)
# print(arr_1)

# count=0
# for i in range(size1):
#     for j in range( i + 1, size1):
#         if arr_1[i] == arr_1[j]:
#             count += 1

# print(count)

# Задача №45. Решение в группах
# Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и
# наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных
# чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не
# превосходящее 105
# . Программа должна вывести все
# пары дружественных чисел, каждое из которых не
# превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз (перестановка чисел новую
# пару не дает).

k = int(input('Input the end of the range: '))

for i in range(2, k) :
    partner = sum_of_dividers(i)
    if i == sum_of_dividers(partner) and i < partner :
        print(f'{i} - {partner}')